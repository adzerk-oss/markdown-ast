<S>                     = BLOCKS

TEXT-BODY               = (NOT-INLINE | INLINE | EOL)*

INLINE                  = I1 | I2 | I3

<I1>                    = L1 (INLINE | INLINE-CHAR)* R1 INLINE-DATA
<I2>                    = L2 (INLINE | INLINE-CHAR)* R2 INLINE-DATA
<I3>                    = L3 (INLINE | INLINE-CHAR)* R3 INLINE-DATA
<INLINE-CHAR>           = !(ESC | INLINE-DELIM) ANY | ESCAPED
<INLINE-DELIM>          = ESC | L1 | R1 | L2 | R2 | L3 | R3
<L1>                    = '^['
<R1>                    = ']'
<L2>                    = '!['
<R2>                    = ']'
<L3>                    = '<<'
<R3>                    = '>>'

INLINE-DATA             = DATA?
NOT-INLINE              = !INLINE ANY

BLOCKS                  = (<BLANK-LINE> | TEXT | BLOCK | PRE-BLOCK | LIST-BLOCKS)+

TEXT                    = TEXT-LINE+
<TEXT-LINE>             = (!(BLOCK | PRE-BLOCK) LINE)+

LIST-BLOCKS             = LIST-BLOCK+
LIST-BLOCK              = LIST-BLOCK-TAG BLOCK-BODY
LIST-BLOCK-TAG          = LIST-BLOCK-TAG-IN DATA?

PRE-BLOCK               = PRE-BLOCK-TAG PRE-BLOCK-BODY
PRE-BLOCK-TAG           = PRE-BLOCK-TAG-IN DATA?
PRE-BLOCK-BODY          = PRE-BLOCK-BODY-START INDENTED-PRE-LINE*
<PRE-BLOCK-BODY-START>  = <BLANK-LINE> | <SP>+ NONBLANK-PRE-LINE

BLOCK                   = BLOCK-TAG BLOCK-BODY
BLOCK-TAG               = BLOCK-TAG-IN DATA?
BLOCK-BODY              = BLOCK-BODY-START INDENTED-LINE*
<BLOCK-BODY-START>      = <BLANK-LINE> | <SP>+ NONBLANK-LINE

<INDENTED-PRE-LINE>     = BLANK-LINE | <INDENT> NONBLANK-PRE-LINE
PRE-LINE                = BLANK-LINE | NONBLANK-PRE-LINE
NONBLANK-PRE-LINE       = !BLANK-LINE PRE-LINE-CHAR+ EOL

<INDENTED-LINE>         = BLANK-LINE | <INDENT> NONBLANK-LINE
LINE                    = BLANK-LINE | NONBLANK-LINE
NONBLANK-LINE           = !BLANK-LINE LINE-CHAR+ EOL

BLANK-LINE              = SP* EOL

DATA                    = MAP | VEC | LIST | STRING
MAP                     = LCB (DATA | DATA-CHAR)* RCB
VEC                     = LSB (DATA | DATA-CHAR)* RSB
LIST                    = LP  (DATA | DATA-CHAR)* RP
STRING                  = DQ STRING-CHAR* DQ

<DATA-CHAR>             = !(ESC | DATA-DELIM) ANY | ESCAPED-PRE
<STRING-CHAR>           = !(ESC | DQ)         ANY | ESCAPED-PRE
<PRE-LINE-CHAR>         = !(ESC | EOL)        ANY | ESCAPED-PRE
<LINE-CHAR>             = !(ESC | EOL)        ANY | ESCAPED

<DATA-DELIM>            = ESC | DQ | LSB | RSB | LCB | RCB | LP | RP

<ESCAPED-PRE>           = ESC ANY
<ESCAPED>               = <ESC> ANY

<SP>                    = " "
<EOL>                   = "\n"
<LSB>                   = '['
<RSB>                   = ']'
<LCB>                   = '{'
<RCB>                   = '}'
<LP>                    = '('
<RP>                    = ')'
<DQ>                    = '"'
<ESC>                   = "\\"
<ANY>                   = #"."
